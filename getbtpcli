#!/usr/bin/env bash

# getbtpcli - Get (latest) btp CLI. Has a test mode (-t or --test) to
# just retrieve & check what the latest version is, without installing.

set -o errexit

declare -r PLATFORM="$(uname -s)"
declare -r ARCH="${PLATFORM,,}-amd64"
declare -r TARGETDIR="$HOME/bin"
declare -r LICENCE="tools.hana.ondemand.com/developer-license-3_1.txt"

confirm_licence_acceptance() {

  # Ensure licence acceptance

  local proceed
  echo "Proceed (with Enter) only if you accept the SAP Developer Licence 3.1"
  echo -n "(see https://$LICENCE) ..."
  # shellcheck disable=2034
  read -r proceed

}

dequarantine() {

  # Remove any Apple quarantine

  local file=$1
  xattr -d com.apple.quarantine "$file" 2> /dev/null || true

}

retrieve() {

  # Download tarball of latest version and extract the btp binary

  local tempdir=$1

  curl \
    --fail \
    --silent \
    --location \
    --header "Cookie: eula_3_1_agreed=$LICENCE; path=/;" \
    "https://tools.hana.ondemand.com/additional/btp-cli-$ARCH-latest.tar.gz" \
    | tar \
      --file - \
      --extract \
      --gunzip \
      --directory "$tempdir" \
      --strip-components 1 \
      "$ARCH/btp"

}

get_version() {

  # Determine the version (uses the proper grep, from GNU)

  local file=$1
  "$file" --version 2> /dev/null | perl -nle'print $& while m{(?<=v)\d+\.\d+\.\d+}g'

}

main() {

  # Move to a temporary directory; extract and check version, and
  # (unless --test mode) install, setting up symlink.

  local tempdir ver testmode=false

  # Determine if we're in test mode
  [[ $1 =~ ^(-t|--test)$ ]] && testmode=true

  # Couple of setup activities if we're going to try to install
  # - make sure the target dir exists
  # - make sure the user confirms acceptance of the licence
  if [[ $testmode = false ]]; then
    [[ ! -d "$TARGETDIR" ]] && mkdir "$TARGETDIR"
    confirm_licence_acceptance
  fi

  # Set up temporary directory and move into it
  tempdir="$(mktemp -d)"

  # Retrieve latest tarball and extract the binary
  retrieve "$tempdir"

  # Dequarantine if on macOS
  [[ $PLATFORM =~ Darwin ]] && dequarantine "$tempdir/btp"

  # Determine version
  ver="$(get_version "$tempdir/btp")"
  echo "Latest version is $ver"

  # Unless we're in test mode, move binary to target directory and
  # set symlink
  if [[ $testmode = false ]]; then
    cd "$TARGETDIR" \
      && mv "$tempdir/btp" "./btp-$ver" \
      && ln -f -s "btp-$ver" btp
  fi

  # Clean up by removing temporary directory
  rm -rf "$tempdir"

}

main "$@"
